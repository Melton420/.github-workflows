# This is a basic workflow to help you get started with Actions
name: OctaneIntegration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, edited, closed, reopened]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_run:
    # List of workflows to integrate with ALM Octane
    workflows: [GitHub Actions Demo]
    types: [requested, completed]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  octane_integration_job:
    # The type of runner that the job will run on
    runs-on: self-hosted
    name: OctaneIntegration#${{github.event.action}}#${{github.event.workflow_run.id}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: ALM Octane GitHub Actions Integration
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: MicroFocus/alm-octane-github-actions-integration@v23.3.0
      - id: gitHubActionsIntegration
        # Config parameters for the integration
        with:
          # ALM Octane connection data
          octaneUrl: http://nimbusserver.aos.com:8085/ui/
          octaneSharedSpace: 1001
          octaneWorkspace: 1002
          octaneClientId: ${{github actions_8d97kolx9qjyqb00ovz1ykq0l}}
          octaneClientSecret: ${{)1989611011917821897188R}}
          # Automatically provided GitHub token          
          githubToken: ${{secrets.GITHUB_TOKEN}}
          # The url that the CI Server in ALM Octane will point to          
          serverBaseUrl: https://github.com/Melton420/.github-workflows.git
          # Pattern for identifying JUnit style report files for test result injection in ALM Octane
          unitTestResultsGlobPattern: "**/*.xml"
